"use strict";(self.webpackChunkcomputerization_website=self.webpackChunkcomputerization_website||[]).push([[5771],{2897:function(a,e,t){t.d(e,{Zo:function(){return o},kt:function(){return h}});var n=t(6687);function s(a,e,t){return e in a?Object.defineProperty(a,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):a[e]=t,a}function r(a,e){var t=Object.keys(a);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(a);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(a,e).enumerable}))),t.push.apply(t,n)}return t}function m(a){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?r(Object(t),!0).forEach((function(e){s(a,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(e){Object.defineProperty(a,e,Object.getOwnPropertyDescriptor(t,e))}))}return a}function p(a,e){if(null==a)return{};var t,n,s=function(a,e){if(null==a)return{};var t,n,s={},r=Object.keys(a);for(n=0;n<r.length;n++)t=r[n],e.indexOf(t)>=0||(s[t]=a[t]);return s}(a,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(a);for(n=0;n<r.length;n++)t=r[n],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(a,t)&&(s[t]=a[t])}return s}var i=n.createContext({}),l=function(a){var e=n.useContext(i),t=e;return a&&(t="function"==typeof a?a(e):m(m({},e),a)),t},o=function(a){var e=l(a.components);return n.createElement(i.Provider,{value:e},a.children)},c={inlineCode:"code",wrapper:function(a){var e=a.children;return n.createElement(n.Fragment,{},e)}},N=n.forwardRef((function(a,e){var t=a.components,s=a.mdxType,r=a.originalType,i=a.parentName,o=p(a,["components","mdxType","originalType","parentName"]),N=l(t),h=s,k=N["".concat(i,".").concat(h)]||N[h]||c[h]||r;return t?n.createElement(k,m(m({ref:e},o),{},{components:t})):n.createElement(k,m({ref:e},o))}));function h(a,e){var t=arguments,s=e&&e.mdxType;if("string"==typeof a||s){var r=t.length,m=new Array(r);m[0]=N;var p={};for(var i in e)hasOwnProperty.call(e,i)&&(p[i]=e[i]);p.originalType=a,p.mdxType="string"==typeof a?a:s,m[1]=p;for(var l=2;l<r;l++)m[l]=t[l];return n.createElement.apply(null,m)}return n.createElement.apply(null,t)}N.displayName="MDXCreateElement"},8253:function(a,e,t){t.r(e),t.d(e,{Question:function(){return N},assets:function(){return o},contentTitle:function(){return i},default:function(){return k},frontMatter:function(){return p},metadata:function(){return l},toc:function(){return c}});var n=t(9149),s=t(8332),r=(t(6687),t(2897)),m=["components"],p={title:"Livestock Lineup",authors:"josh-cena",tags:["algorithm"]},i=void 0,l={permalink:"/blog/2020/12/02/algorithm5",source:"@site/blog/2020-12-02-algorithm5.mdx",title:"Livestock Lineup",description:"\u8fd9\u662f C \u793e\u7b97\u6cd5\u56e2\u961f\u7684\u7b2c\u4e94\u6b21\u6d3b\u52a8\u3002\u7531\u4e8e 12 \u6708 USACO \u7ade\u8d5b\u5728\u5373\uff0c\u6211\u4eec\u5c55\u5f00\u4e86\u9488\u5bf9\u6027\u7684\u7ec3\u4e60\u3002\u7b2c\u4e00\u6b21\u6d3b\u52a8\u6211\u4eec\u4ece\u94dc\u7ec4\u5f00\u59cb\u7ec3\u4e60\uff0c\u7531\u4e8e\u6210\u5458\u4eec\u6c34\u5e73\u8f83\u9ad8\uff0c\u6211\u4eec\u6311\u9009\u4e86\u4e00\u9053\u6709\u4e00\u5b9a\u7f16\u7a0b\u6c34\u5e73\u8981\u6c42\u7684\u94dc\u7ec4\u9898\u76ee\u3002\u94dc\u7ec4\u9898\u76ee\u53ea\u8981\u6c42\u5bf9\u5faa\u73af\u7684\u638c\u63e1\uff0c\u4e00\u5b9a\u53ef\u4ee5\u901a\u8fc7\u679a\u4e3e\u5f97\u5230\u7ed3\u679c\uff0c\u56e0\u6b64\u5bf9\u7b97\u6cd5\u548c\u6570\u636e\u7ed3\u6784\u6ca1\u6709\u592a\u9ad8\u8981\u6c42\u3002",date:"2020-12-02T00:00:00.000Z",formattedDate:"2020\u5e7412\u67082\u65e5",tags:[{label:"algorithm",permalink:"/blog/tags/algorithm"}],readingTime:6.35,truncated:!0,authors:[{name:"Josh Cena",title:"\u4fe1\u606f\u5316\u793e 2022 \u5c4a\u793e\u957f",url:"https://github.com/Josh-Cena",imageURL:"https://github.com/Josh-Cena.png",key:"josh-cena"}],frontMatter:{title:"Livestock Lineup",authors:"josh-cena",tags:["algorithm"]},prevItem:{title:"OI \u90e8\u6d3b\u52a8-\u7f51\u7edc\u6d41\u95ee\u9898\u4ecb\u7ecd",permalink:"/blog/2021/11/24/network-flow"},nextItem:{title:"\u9636\u4e58\u5b57\u7b26\u4e32",permalink:"/blog/2020/11/04/algorithm3"}},o={authorsImageUrls:[void 0]},c=[{value:"\u9898\u76ee",id:"\u9898\u76ee",level:2},{value:"\u9898\u89e3",id:"\u9898\u89e3",level:2},{value:"\u7a0b\u5e8f",id:"\u7a0b\u5e8f",level:2}],N=function(a){var e=a.children,t=a.color;return(0,r.kt)("div",{style:{backgroundColor:t,borderRadius:"10px",color:"#fff",padding:"1em",marginBottom:"1em",marginTop:"1em"}},e)},h={toc:c,Question:N};function k(a){var e=a.components,t=(0,s.Z)(a,m);return(0,r.kt)("wrapper",(0,n.Z)({},h,t,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"\u8fd9\u662f C \u793e\u7b97\u6cd5\u56e2\u961f\u7684\u7b2c\u4e94\u6b21\u6d3b\u52a8\u3002\u7531\u4e8e 12 \u6708 USACO \u7ade\u8d5b\u5728\u5373\uff0c\u6211\u4eec\u5c55\u5f00\u4e86\u9488\u5bf9\u6027\u7684\u7ec3\u4e60\u3002\u7b2c\u4e00\u6b21\u6d3b\u52a8\u6211\u4eec\u4ece\u94dc\u7ec4\u5f00\u59cb\u7ec3\u4e60\uff0c\u7531\u4e8e\u6210\u5458\u4eec\u6c34\u5e73\u8f83\u9ad8\uff0c\u6211\u4eec\u6311\u9009\u4e86\u4e00\u9053\u6709\u4e00\u5b9a\u7f16\u7a0b\u6c34\u5e73\u8981\u6c42\u7684\u94dc\u7ec4\u9898\u76ee\u3002\u94dc\u7ec4\u9898\u76ee\u53ea\u8981\u6c42\u5bf9\u5faa\u73af\u7684\u638c\u63e1\uff0c\u4e00\u5b9a\u53ef\u4ee5\u901a\u8fc7\u679a\u4e3e\u5f97\u5230\u7ed3\u679c\uff0c\u56e0\u6b64\u5bf9\u7b97\u6cd5\u548c\u6570\u636e\u7ed3\u6784\u6ca1\u6709\u592a\u9ad8\u8981\u6c42\u3002"),(0,r.kt)("h2",{id:"\u9898\u76ee"},"\u9898\u76ee"),(0,r.kt)("question",null,(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"\u9898\u76ee\u6765\u6e90\uff1a",(0,r.kt)("a",{parentName:"strong",href:"http://www.usaco.org/index.php?page=viewproblem2&cpid=965"},"USACO 2019 December Bronze 3"))),(0,r.kt)("p",null,"Every day, Farmer John milks his 8 dairy cows, named Bessie, Buttercup, Belinda, Beatrice, Bella, Blue, Betsy, and Sue."),(0,r.kt)("p",null,"The cows are rather picky, unfortunately, and require that Farmer John milks them in an order that respects ",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mi",{parentName:"mrow"},"N")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"N")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.6833em"}}),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.10903em"}},"N"))))),' constraints. Each constraint is of the form "',(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mi",{parentName:"mrow"},"X")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"X")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.6833em"}}),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.07847em"}},"X")))))," must be milked beside ",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mi",{parentName:"mrow"},"Y")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"Y")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.6833em"}}),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.22222em"}},"Y"))))),'", stipulating that cow ',(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mi",{parentName:"mrow"},"X")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"X")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.6833em"}}),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.07847em"}},"X")))))," must appear in the milking order either directly after cow ",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mi",{parentName:"mrow"},"Y")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"Y")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.6833em"}}),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.22222em"}},"Y")))))," or directly before cow ",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mi",{parentName:"mrow"},"Y")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"Y")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.6833em"}}),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.22222em"}},"Y"))))),"."),(0,r.kt)("p",null,"Please help Farmer John determine an ordering of his cows that satisfies all of these required constraints. It is guaranteed that an ordering is always possible. If several orderings work, then please output the one that is alphabetically first. That is, the first cow should have the alphabetically lowest name of all possible cows that could appear first in any valid ordering. Among all orderings starting with this same alphabetically-first cow, the second cow should be alphabetically lowest among all possible valid orderings, and so on."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"\u6570\u636e\u89c4\u6a21"),(0,r.kt)("th",{parentName:"tr",align:null},"\u5185\u5b58\u9650\u5236"),(0,r.kt)("th",{parentName:"tr",align:null},"\u8fd0\u884c\u65f6\u95f4"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("span",{parentName:"td",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mn",{parentName:"mrow"},"1"),(0,r.kt)("mo",{parentName:"mrow"},"\u2264"),(0,r.kt)("mi",{parentName:"mrow"},"N"),(0,r.kt)("mo",{parentName:"mrow"},"\u2264"),(0,r.kt)("mn",{parentName:"mrow"},"7")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"1\\le N\\le 7")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.7804em",verticalAlign:"-0.136em"}}),(0,r.kt)("span",{parentName:"span",className:"mord"},"1"),(0,r.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2778em"}}),(0,r.kt)("span",{parentName:"span",className:"mrel"},"\u2264"),(0,r.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2778em"}})),(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.8193em",verticalAlign:"-0.136em"}}),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.10903em"}},"N"),(0,r.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2778em"}}),(0,r.kt)("span",{parentName:"span",className:"mrel"},"\u2264"),(0,r.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2778em"}})),(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.6444em"}}),(0,r.kt)("span",{parentName:"span",className:"mord"},"7")))))),(0,r.kt)("td",{parentName:"tr",align:null},"256MB"),(0,r.kt)("td",{parentName:"tr",align:null},"2.0s"))))),(0,r.kt)("h2",{id:"\u9898\u89e3"},"\u9898\u89e3"),(0,r.kt)("p",null,"\u8fd9\u9053\u9898\u5728\u7406\u89e3\u4e86\u9898\u76ee\u7684\u9700\u6c42\u2014\u2014\u751f\u6210\u4e00\u4e2a\u7b26\u5408\u7ed9\u5b9a\u7ea6\u675f\u7684\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u6392\u5217\u540e\uff0c\u5e94\u8be5\u96be\u5ea6\u4e0d\u9ad8\u3002\u6211\u4eec\u53ef\u4ee5\u6309\u5b57\u5178\u5e8f\u751f\u6210\u5168\u90e8\u7684\u6392\u5217\uff08\u4e00\u5171\u6709",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mn",{parentName:"mrow"},"8"),(0,r.kt)("mo",{parentName:"mrow",stretchy:"false"},"!"),(0,r.kt)("mo",{parentName:"mrow"},"="),(0,r.kt)("mn",{parentName:"mrow"},"40320")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"8!=40320")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.6944em"}}),(0,r.kt)("span",{parentName:"span",className:"mord"},"8"),(0,r.kt)("span",{parentName:"span",className:"mclose"},"!"),(0,r.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2778em"}}),(0,r.kt)("span",{parentName:"span",className:"mrel"},"="),(0,r.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2778em"}})),(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.6444em"}}),(0,r.kt)("span",{parentName:"span",className:"mord"},"40320"))))),"\u79cd\uff09\uff0c\u7136\u540e\u8f93\u51fa\u7b2c\u4e00\u4e2a\u6ee1\u8db3\u6240\u6709\u7ea6\u675f\u6761\u4ef6\u7684\u3002\u5982\u679c\u4e0d\u4f1a\u7528\u56de\u6eaf\u7b97\u6cd5\u751f\u6210\u5168\u6392\u5217\uff0c\u53ef\u80fd\u9700\u8981\u501f\u52a9 ",(0,r.kt)("inlineCode",{parentName:"p"},"algorithm")," \u4e2d\u7684 ",(0,r.kt)("inlineCode",{parentName:"p"},"next_permutation")," \u51fd\u6570\u3002\u8fd9\u4e5f\u662f\u5178\u578b\u7684\u94dc\u7ec4\u601d\u8def\uff1a\u56e0\u4e3a\u89c4\u6a21\u6781\u5c0f\uff0c\u53ef\u4ee5\u66b4\u529b\u679a\u4e3e\u4e4b\u540e",(0,r.kt)("em",{parentName:"p"},"\u6311\u9009"),"\u89e3\u800c\u4e0d\u662f",(0,r.kt)("em",{parentName:"p"},"\u6784\u9020"),"\u89e3\u3002"),(0,r.kt)("p",null,"\u5f53\u7136\uff0c\u8fd9\u79cd\u65b9\u6cd5\u5bf9\u4e8e\u6709\u4e00\u4e9b\u7ade\u8d5b\u7ecf\u9a8c\u7684\u53c2\u8d5b\u8005\u6765\u8bf4\u53cd\u5012\u4e0d\u5bb9\u6613\u60f3\u5230\u3002\u8fd9\u4e9b\u53c2\u8d5b\u8005\u4f1a\u8bd5\u56fe\u901a\u8fc7\u7ea6\u675f\u6761\u4ef6\u6765\u6784\u9020\u89e3\u3002\u8fd9\u9700\u8981\u4e00\u70b9\u70b9\u8d2a\u5fc3\u7684\u601d\u60f3\uff1a\u4e3a\u4e86\u8ba9\u6392\u5217\u5b57\u5178\u5e8f\u6700\u5c0f\uff0c\u5c31\u4e00\u5b9a\u8981\u8ba9\u6bcf\u4e00\u4f4d\u4e0a\u7684\u5976\u725b\u5b57\u5178\u5e8f\u5c3d\u53ef\u80fd\u5c0f\u3002\u6211\u4eec\u53ef\u4ee5\u628a\u4e00\u4e2a\u6392\u5217\u770b\u4f5c\u4e00\u4e2a\u201c\u7ea6\u675f\u94fe\u201d\uff0c\u5176\u4e2d\u6bcf\u4e00\u5934\u5976\u725b\u90fd\u56e0\u4e3a\u5b83\u76f8\u90bb\u4f4d\u7f6e\u5976\u725b\u7684\u7ea6\u675f\u800c\u53ea\u6709\u552f\u4e00\u7684\u53ef\u80fd\u3002\u6bcf\u5b8c\u6210\u4e00\u6761\u7ea6\u675f\u94fe\u7684\u8fde\u63a5\u540e\uff0c\u90fd\u53ef\u4ee5\u4ece\u5269\u4e0b\u672a\u88ab\u5b89\u6392\u8fdb\u961f\u7684\u5976\u725b\u4e2d\u6311\u9009\u7f16\u53f7\u6700\u5c0f\u7684\uff0c\u4f46\u4e0d\u80fd\u662f\u6709\u4e24\u4e2a\u672a\u6ee1\u8db3\u7684\u7ea6\u675f\u7684\uff08\u56e0\u4e3a\u4e00\u4e2a\u201c\u7ea6\u675f\u94fe\u201d\u4e2d\u5934\u548c\u5c3e\u7684\u5976\u725b\u90fd\u53ea\u80fd\u548c\u5b83\u76f8\u90bb\u7684\u4e00\u5934\u5976\u725b\u95f4\u6709\u7ea6\u675f\uff09\uff0c\u7136\u540e\u5728\u786e\u5b9a\u4e86\u94fe\u5934\u4e4b\u540e\uff0c\u5c31\u53ef\u4ee5\u975e\u5e38\u81ea\u7136\u5730\u5f97\u5230\u6574\u4e2a\u94fe\u6761\u3002\u91cd\u590d\u540c\u6837\u7684\u6784\u9020\u8fc7\u7a0b\uff0c\u76f4\u5230\u6240\u6709\u5976\u725b\u90fd\u88ab\u6dfb\u52a0\u5165\u961f\u5217\u3002"),(0,r.kt)("h2",{id:"\u7a0b\u5e8f"},"\u7a0b\u5e8f"),(0,r.kt)("p",null,"\u66b4\u529b\u6cd5\u7684\u4ee3\u7801\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'/**\n * Adopted from official solution at\n * http://www.usaco.org/current/data/sol_lineup_bronze_dec19.html\n */\n#include <iostream>\n#include <fstream>\n#include <vector>\n#include <algorithm>\n\nusing namespace std;\n\nstring names[8] = {"Beatrice", "Belinda", "Bella", "Bessie", "Betsy", "Blue", "Buttercup", "Sue"};\n// beside_a \u548c beside_b \u4e2d\u5bf9\u5e94\u4e0b\u6807\u7684\u5976\u725b\u8868\u793a\u4e00\u7ec4\u7ea6\u675f\u5173\u7cfb\nvector<string> beside_a, beside_b;\nint n;\n\nint getID(string name) {\n    for (int i = 0; i < 8; i++)\n        if (names[i] == name)\n            return i;\n    return -1;\n}\n\nbool satisfies_constraints() {\n    for (int i = 0; i < n; i++)\n        if (abs(getID(beside_a[i]) - getID(beside_b[i])) != 1)\n            return false;\n    return true;\n}\n\nint main() {\n    ifstream fin("lineup.in");\n    ofstream fout("lineup.out");\n    fin >> n;\n    string a, b;\n    for (int i = 0; i < n; i++) {\n        fin >> a >> b >> b >> b >> b >> b;\n        beside_a.push_back(a);\n        beside_b.push_back(b);\n    }\n    // \u904d\u5386\u6240\u6709\u76848\u5934\u5976\u725b\u7684\u6392\u5217\uff0c\u8f93\u51fa\u7b2c\u4e00\u4e2a\u6ee1\u8db3\u7ea6\u675f\u7684\u89e3\n    do {\n        if (satisfies_constraints()) {\n            for (int i = 0; i < 8; i++)\n                fout << names[i] << endl;\n            return 0;\n        }\n    } while (next_permutation(names.begin(), names.end()));\n    return 0;\n}\n')),(0,r.kt)("p",null,"\u6784\u9020\u6cd5\u7684\u4ee3\u7801\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <iostream>\n#include <fstream>\n\nusing namespace std;\n\nstruct cow {\n    int adj[2];  // \u9700\u8981\u548c\u8fd9\u5934\u5976\u725b\u76f8\u90bb\u7684\u5976\u725b\u7684ID\n    int adjcnt;  // \u8fd9\u5934\u5976\u725b\u4e00\u5171\u6709\u51e0\u4e2a\u7ea6\u675f\u6761\u4ef6\uff1b\u51b3\u5b9a\u4e86\u80fd\u5426\u628a\u5b83\u653e\u5728\u7ea6\u675f\u94fe\u7684\u5f00\u5934\n    bool chosen; // \u662f\u5426\u5df2\u7ecf\u8fdb\u961f\n} cows[8];\nstring names[8] = {"Beatrice", "Belinda", "Bella", "Bessie", "Betsy", "Blue", "Buttercup", "Sue"};\n\nint getID(string name) {\n    for(int i = 0; i < 8; i++)\n        if(names[i] == name)\n            return i;\n    return -1;\n}\n\nint main() {\n    ifstream fin("lineup.in");\n    ofstream fout("lineup.out");\n    int n;\n    fin >> n;\n    string a, b;\n    for (int i = 0; i < n; i++) {\n        fin >> a >> b >> b >> b >> b >> b;\n        cows[getID(a)].adj[cows[getID(a)].adjcnt++] = getID(b);\n        cows[getID(b)].adj[cows[getID(b)].adjcnt++] = getID(a);\n    }\n    int prev = -1;\n    // \u6bcf\u6b21\u5faa\u73af\u5411\u961f\u5217\u4e2d\u6dfb\u52a0\u4e00\u5934\u5976\u725b\uff1b\u5982\u679c\u4e0a\u4e00\u5934\u5976\u725b\u6ca1\u6709\u66f4\u591a\u7684\u7ea6\u675f\u6761\u4ef6\u4e86\uff0c\u5219\u53ef\u4ee5\u9009\u62e9\u4e00\u5934\u65b0\u7684\uff0c\u5426\u5219\u9009\u62e9\u9700\u8981\u548c\u4e0a\u4e00\u5934\u76f8\u90bb\u7684\u5976\u725b\n    for (int _ = 0; _ < 8; _++) {\n        if (_ == 0 || cows[prev].adjcnt == 0) {\n            for (int i = 0; i < 8; i++) {\n                if (!cows[i].chosen && cows[i].adjcnt < 2) {\n                    cows[i].chosen = true;\n                    fout << names[i] << endl;\n                    prev = i;\n                    break;\n                }\n            }\n        } else if (cows[prev].adjcnt == 1) {\n            int i = cows[prev].adj[0];\n            cows[i].chosen = true;\n            // \u8fd9\u91cc\u7684\u64cd\u4f5c\u662f\u5728\u628acows[i]\u6dfb\u52a0\u5165\u961f\u5217\u7684\u540c\u65f6\u201c\u5220\u9664\u201d\u6389\u5b83\u5df2\u7ecf\u6ee1\u8db3\u7684\u90a3\u6761\u7ea6\u675f\n            cows[i].adjcnt--;\n            if(cows[i].adj[0] == prev)\n                cows[i].adj[0] = cows[i].adj[1];\n            fout << names[i] << endl;\n            prev = i;\n        }\n    }\n    return 0;\n}\n')))}k.isMDXComponent=!0}}]);